UTStatsDB
  Copyright (C) 2002-2009  Patrick Contreras / Paul Gallier
  Copyright (C) 2018  Kenneth Watson

===============================================================================
========== Important Changes to Version 3.08 ==================================
===============================================================================
If you are upgrading from UTStatsDB 3.06, a new installation is highly
recommended, rather than attempting an update. If you do perform an update,
rather than a new install, certain special event data like player headshot
counts may not be transferred to the new database structures.

===============================================================================
========== Requirements =======================================================
===============================================================================
There are 3 primary requirements for running UTStatsDB:

- A Web Server (nginx, Apache, etc)
- PHP (5.1 minimum, 7.0 or higher is recommended), with the following modules:
  - One of the following database modules: MySQL, SQLite3, or Sybase (MSSQL)
  - GD2 module (optional, for graph drawing)
  - Sockets (optional, for querying live game servers)
- A database:
  - MySQL - requires a running MySQL server
  - SQLite - stores the DB as a file - easiest to use and amange
  - Microsoft SQL Server

Most shared hosting providers will make combinations of these above available
via various hosting plans, or they're relatively easy to set up on your own
environment.

It's also recommended to set your PHP memory limit to at least 32MB.

===============================================================================
========== Database ===========================================================
===============================================================================
As of UTStatsDB version 3.08, database configuration is provided in
statsdb.inc.php as a PDO DSN in the $SQLdb option.

MySQL:

- Configuration Example:
 - $dbtype = 'MySQL';
 - $SQLdb = 'mysql:dbname=utstatsdb;host=127.0.0.1';
 - $SQLus = 'dbusername';
 - $SQLpw = 'dbpassword';

For the most part this assumes familiarity with MySQL, however, here's a brief
step-by-step on setting up a MySQL database for use with UTStatsDB.

If you already have a user and database you can use, or if you have no options
of such, such as when leasing space on a shared server, just enter your MySQL
username and database information into statsdb.inc.php.

If you're running the server on your own system then you will probably want to
create a seperate user and database to use with UTStatsDB.  To create a new
database, login to MySQL with an account that has full privileges (such as root)
and enter:

CREATE utstatsdb;

This will create a new database called 'utstatsdb'.  Next create a new user for
the UTStatsDB program and give them the necessary rights:

GRANT SELECT,INSERT,UPDATE,DELETE,CREATE,DROP,ALTER,INDEX,CREATE TEMPORARY TABLES
ON utstatsdb.*
TO utsuser@localhost
IDENTIFIED BY 'password';

Change 'password' to something more secure and change it to match in
statsdb.inc.php.

SQLite:

- Configuration Example:
 - $dbtype = 'SQLite';
 - $SQLdb = 'sqlite:dbname=/var/lib/utstatsdb/utstatsdb.sqlite';
 - $SQLus = '';
 - $SQLpw = '';

UTStatsDB supports SQLite, a public domain database system that's built into
PHP 5.x and up.  Using SQLite with PHP requires no special configuration - the
entire MySQL setup can be ignored.  Just set your $dbtype variable in
statsdb.inc.php to "SQLite" and $SQLdb to whatever filename you wish to use
(absolute and relative paths are supported) and that's it.  SQLite may be slower
than MySQL, so you may need to increase your max_execution_time in php.ini.

The database file specified in the DSN in $SQLdb does not need to exist on first
run, it will be created automatically. On Linux, ensure the parent directory is
writable by your web server's user.

Microsoft SQL:

- Configuration Example:
 - $dbtype = 'MSSQL';
 - $SQLdb = 'dblib:dbname=utstatsdb;host=127.0.0.1';
 - $SQLus = 'dbusername';
 - $SQLpw = 'dbpassword';

As of UTStatsDB version 3.07, Microsoft SQL is supported, although it is largely
untested - your mileage may vary.

Just create your database, and make sure the configured user has permission to
create, drop and modify tables, and has full read/write access for data.

===============================================================================
========== UTStatsDB Installation =============================================
===============================================================================
Extract the contents of this archive to a directory within your web server's
public path.

Edit the file includes/statsdb.inc.php, as per the database configuration
options described above.

For added security you can optionally copy the 'statsdb.inc.php' file to a
location outside of your public path.  If so, create a new statsdb.inc.php with
the following:

<?php require("<absolute-path-to-new-file.php>"); ?>

If using MySQL or MSSQL and have not yet done so, configure a user and database
now - see the Database section above.

Access http://yourwebsite.com/utstats/admin.php from a web browser.  On first
run this will ask for the init password ($InitPass) specified in
statsdb.inc.php.  Make sure all your tables are successfully created then
continue to the main menu.  The default admin password is "admin".

IMPORTANT: Be sure to change the admin and update passwords in the main
configuration.

While it's possible to run everything else default, if you don't intend to use
a server-side mutator like OLStats to post logs to UTStatsDB automaticallt after
each game, you will need to set options in the log configuration.  These
settings specify where to find your log files and what prefix to use.  They also
allow you to specify an ftp server from which to download log files.

For information about the configuration options, see CONFIG_GUIDE.txt.

You will need to configure your game server to output log files.  See
LOGGING.txt for details.

===============================================================================
========== Running the Log Parser =============================================
===============================================================================
To parse the log files run:
http://yourwebsite.com/utstats/logs.php?pass=updatepass
(change "updatepass" to your UpdatePass specified in the Main Config menu)

Optional Parameters:
&savelogs - Doesn't delete the log files (if you run it again it
            will attempt to parse the same files over again)
&multi    - Calculates multi-kills - use only for logs generated by
            older versions of LocalLog (pre 0.93)
&nohtml   - Doesn't display html tags (for command line use).

The logs.php file can be run from the command line.  You can run it using:
php logs.php pass=<updatepass> nohtml

This can be added to your crontab or task scheduler to run periodically.

When the log parser is run (without the savelogs parameter), it will delete all
but the last two incomplete logs for each individual server name.  This is to
prevent the system from deleting logs for games that are still in session.

Only matches that have an EndGame (EG) tag line for a frag/score limit or time
limit reached will be added to the database.  By default, if the server is shut
down or the map changed mid-game it will not be logged (see the Main Config
section in CONFIG_GUIDE.txt).

The main viewer page is accessed via index.php.  Set your web server to service
the index.php page in your utstats directory by default.

The log parser can also be run from the admin menu.

===============================================================================
========== Server Query =======================================================
===============================================================================
UTStatsDB can query game servers and display current information on the main
page.  This requires that the game server have querying enabled and the
necessary UDP port open to the web server.

To configure the query configuration in UTStatsDB you'll need to add a server to
the Query Config menu.

Query Server:
  This is the FQDN or IP address of the game server.  If the web server is
  running on the same server as the game server then this could be set to the
  127.0.0.1 localhost.

Game Port:
  For versions before Unreal Tournament 3, this should be set to the same port
  that players use to connect to the server.  As of UT3 however, the query port
  is no longer relative to the game port and is set to 6500 by default for the
  first server and incremented for each additional server.  Due to this method,
  you will need to specify the query port instead of the game port for UT3.  If
  you're running more than one game server you will need to configure UT3 by
  setting -queryport=xxxx in the startup command line.

Server Link:
  Set this to the address at which players will connect to your server.  This
  can include the FQDN or the IP address of your game server, preceded by the
  protocol.  Do not include the game port, as it will be appended automatically.
        ut:// = Unreal Tournament
    ut2003:// = UT2003
    ut2004:// = UT2004
       ut3:// = Unreal Tournament 3
  Note that UT3 does not automatically register the protocol handler by default.

Query Port:
  UT 99 = Unreal Tournament
  Unreal = UT2003 or UT2004 ("Game Spy" can optionally be used - not recommended)
  UT3 = Unreal Tournament 3

In order for the query option to work in UTStatsDB, your UT server must be
configured to respond to queries.  The following are sample configurations:

Unreal Tournament:
  Edit System\UnrealTournament.ini to enable query capability:

  [Engine.GameEngine]
  ServerActors=IpServer.UdpServerQuery

Unreal Tournament 2004:
  Edit System\UT2004.ini to enable query capability:

  Method 1: Enable the master server and GameSpy uplinks:
    [Engine.GameEngine]
    ServerActors=IpDrv.MasterServerUplink

    [IpDrv.MasterServerUplink]
    DoUplink=True
    UplinkToGamespy=True

  Method 2: Install and enable El Muerte's ServerExt ServQuery:
    [Engine.GameEngine]
    ;ServerActors=IpDrv.MasterServerUplink
    ServerActors=ServerExt.SQMSUplink

    [ServerExt.SQMSUplink]
    bGameSpyQueries=True
    UdpGamespyQueryClass=ServerExt.ServQuery

    [ServerExt.ServQuery]
    bVerbose=false
    sReplyTo=ABEGMST
    ePType=PT_PerFrame

  Method 3: Install and enable OverloadUT's OLStats query:
    [Engine.GameEngine]
    ;ServerActors=IpDrv.MasterServerUplink
    ServerActors=OLStats.OLSQMSUplink

    [OLStats.OLSQMSUplink]
    bGameSpyQueries=True
    UdpGamespyQueryClass=OLStats.OLServQuery

    [OLStats.OLServQuery]
    bVerbose=false
    sReplyTo=TASGMEBHO
    ePType=PT_None

  Unreal Tournament 3:
    UTGame/Config/UTEngine.ini

    [OnlineSubsystemGameSpy.OnlineSubsystemGameSpy]
    QueryPort=6500

    You can set this port to any UDP port you wish to use for querying the server.
    In your server startup line you must include a valid GameSpy login:
    -login=<user> -password=<pass>

===============================================================================
========== DemoRec Files ======================================================
===============================================================================
The Match Stats page of UTStatsDB will look for a file containing a matching
date/time string in the directory specified by the $demodir config variable
(with $demoext as the extension) and provide a link to the user if found.  The
link is generated with the prefix taken from $demourl.  UTStatsDB can also be
configured to automatically download demorec files via ftp (see the
config.inc.php notes).  If you've maxmatches set, older demorec files will be
deleted as the associated matches are removed.  In your DemoRecord.ini file you
must set 'bSetNums' to False and leave 'FileName' blank.

===============================================================================
========== Map Images =========================================================
===============================================================================
UTStatsDB 3.00 supports displaying map images when available.  Simply place
images in a directory called "mapimages" within your UTStatsDB directory.
Images must be either use .gif or .jpg extensions and the filename must be all
lowercase and match the filenames of the maps.
